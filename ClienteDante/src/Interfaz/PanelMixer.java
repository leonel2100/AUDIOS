/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;
import Negocio.ThreadAudio;
import Datos.Configuracion;
import Datos.XmlRead;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JSlider;

/**
 *
 * @author leone
 */
public class PanelMixer extends javax.swing.JPanel {
    
    private ArrayList<Integer> ganancias;
    private ArrayList<String> canales;
    private int Frecuencia;
    private int Muestra;
    
    private  int alternar0=0;
    private  int alternar1=0;
    private  int alternar2=0;
    private  int alternar3=0;
    private  int alternar4=0;
    private  int alternar5=0;
    private  int alternar6=0;
    private  int alternar7=0;
    private  int alternar8=0;
    private  int alternar9=0;
    private  int alternar10=0;
    private  int alternar11=0;
    private  int alternar12=0;
    private  int alternar13=0;
    private  int alternar14=0;
    private  int alternar15=0;
    private  int alternar16=0;
    private  int alternar17=0;
    private  int alternar18=0;
    private  int alternar19=0;
    private  int alternar20=0;
    private  int alternar21=0;
    private  int alternar22=0;
    private  int alternar23=0;
    private  int alternar24=0;
    private  int alternar25=0;
    private  int alternar26=0;
    private  int alternar27=0;
    private  int alternar28=0;
    private  int alternar29=0;
    private  int alternar30=0;
    private  int alternar31=0;
    private  int alternar32=0;
    
    
    private ThreadAudio audio0;
    private ThreadAudio audio1;
    private ThreadAudio audio2;       
    private ThreadAudio audio3;
    private ThreadAudio audio4;
    private ThreadAudio audio5;
    private ThreadAudio audio6;
    private ThreadAudio audio7;
    private ThreadAudio audio8;
    private ThreadAudio audio9;
    private ThreadAudio audio10;
    private ThreadAudio audio11;
    private ThreadAudio audio12;
    private ThreadAudio audio13;
    private ThreadAudio audio14;
    private ThreadAudio audio15;
    private ThreadAudio audio16;
    private ThreadAudio audio17;
    private ThreadAudio audio18;
    private ThreadAudio audio19;
    private ThreadAudio audio20;
    private ThreadAudio audio21;
    private ThreadAudio audio22;
    private ThreadAudio audio23;
    private ThreadAudio audio24;
    private ThreadAudio audio25;
    private ThreadAudio audio26;
    private ThreadAudio audio27;
    private ThreadAudio audio28;
    private ThreadAudio audio29;
    private ThreadAudio audio30;
    private ThreadAudio audio31;
    private ThreadAudio audio32;
    
    private Configuracion Conf;
    private XmlRead X;
    private Panel P;
    /**
     * Creates new form NewJPanel
     */
    public PanelMixer(Panel P) {
        this.P=P;
        initComponents();
        X=new XmlRead();
        canales=new ArrayList<String>();
        ganancias=new ArrayList<Integer>();
        
        for(int i=0;i<32;i++){
            canales.add("OFF");
            ganancias.add(1);
            
           }
        
        ///init
        V1.setValue(0);
        V2.setValue(0);
        V3.setValue(0);
        V4.setValue(0);
        V5.setValue(0);
        V6.setValue(0);
        V7.setValue(0);
        V8.setValue(0);
        V9.setValue(0);
        V10.setValue(0);
        V11.setValue(0);
        V12.setValue(0);
        V13.setValue(0);
        V14.setValue(0);
        V15.setValue(0);
        V16.setValue(0);
        V17.setValue(0);
        V18.setValue(0);
        V19.setValue(0);
        V20.setValue(0);
        V21.setValue(0);
        V22.setValue(0);
        V23.setValue(0);
        V24.setValue(0);
        V25.setValue(0);
        V26.setValue(0);
        V27.setValue(0);
        V28.setValue(0);
        V29.setValue(0);
        V30.setValue(0);
        V31.setValue(0);
        V32.setValue(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    public void SetGanancias(ArrayList<Integer> ganancias){
       this.ganancias=ganancias;
    }
    
    public ArrayList<Integer> GetGanacias(){
      return ganancias;
    }
    
     public void SetCanales(ArrayList<String> canales){
       this.canales=canales;
    }
    
    public ArrayList<String> GetCanales(){
      return canales;
    }
    
    
    public void SetAlias(ArrayList<String> Nombres){
       
       this.C1.setText(Nombres.get(0));
       this.C2.setText(Nombres.get(1));
       this.C3.setText(Nombres.get(2));
       this.C4.setText(Nombres.get(3));
       this.C5.setText(Nombres.get(4));
       this.C6.setText(Nombres.get(5));
       this.C7.setText(Nombres.get(6));
       this.C8.setText(Nombres.get(7));
       this.C9.setText(Nombres.get(8));
       this.C10.setText(Nombres.get(9));
       this.C11.setText(Nombres.get(10));
       this.C12.setText(Nombres.get(11));
       this.C13.setText(Nombres.get(12));
       this.C14.setText(Nombres.get(13));
       this.C15.setText(Nombres.get(14));
       this.C16.setText(Nombres.get(15));
       this.C17.setText(Nombres.get(16));
       this.C18.setText(Nombres.get(17));
       this.C19.setText(Nombres.get(18));
       this.C20.setText(Nombres.get(19));
       this.C21.setText(Nombres.get(20));
       this.C22.setText(Nombres.get(21));
       this.C23.setText(Nombres.get(22));
       this.C24.setText(Nombres.get(23));
       this.C25.setText(Nombres.get(24));
       this.C26.setText(Nombres.get(25));
       this.C27.setText(Nombres.get(26));
       this.C28.setText(Nombres.get(27));
       this.C29.setText(Nombres.get(28));
       this.C30.setText(Nombres.get(29));
       this.C31.setText(Nombres.get(30));
       this.C32.setText(Nombres.get(31));
      
      
             
       
    }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        C1 = new javax.swing.JButton();
        V1 = new javax.swing.JSlider();
        C2 = new javax.swing.JButton();
        V2 = new javax.swing.JSlider();
        C3 = new javax.swing.JButton();
        V3 = new javax.swing.JSlider();
        C4 = new javax.swing.JButton();
        V4 = new javax.swing.JSlider();
        C9 = new javax.swing.JButton();
        V9 = new javax.swing.JSlider();
        V12 = new javax.swing.JSlider();
        C12 = new javax.swing.JButton();
        V11 = new javax.swing.JSlider();
        C11 = new javax.swing.JButton();
        V10 = new javax.swing.JSlider();
        C10 = new javax.swing.JButton();
        C13 = new javax.swing.JButton();
        V13 = new javax.swing.JSlider();
        V16 = new javax.swing.JSlider();
        C16 = new javax.swing.JButton();
        V15 = new javax.swing.JSlider();
        C15 = new javax.swing.JButton();
        V14 = new javax.swing.JSlider();
        C14 = new javax.swing.JButton();
        C5 = new javax.swing.JButton();
        V5 = new javax.swing.JSlider();
        V8 = new javax.swing.JSlider();
        C8 = new javax.swing.JButton();
        V7 = new javax.swing.JSlider();
        C7 = new javax.swing.JButton();
        V6 = new javax.swing.JSlider();
        C6 = new javax.swing.JButton();
        C17 = new javax.swing.JButton();
        V17 = new javax.swing.JSlider();
        V20 = new javax.swing.JSlider();
        C20 = new javax.swing.JButton();
        V19 = new javax.swing.JSlider();
        C19 = new javax.swing.JButton();
        V18 = new javax.swing.JSlider();
        C18 = new javax.swing.JButton();
        C21 = new javax.swing.JButton();
        V21 = new javax.swing.JSlider();
        V24 = new javax.swing.JSlider();
        C24 = new javax.swing.JButton();
        V23 = new javax.swing.JSlider();
        C23 = new javax.swing.JButton();
        V22 = new javax.swing.JSlider();
        C22 = new javax.swing.JButton();
        C25 = new javax.swing.JButton();
        V25 = new javax.swing.JSlider();
        V28 = new javax.swing.JSlider();
        C28 = new javax.swing.JButton();
        V27 = new javax.swing.JSlider();
        C27 = new javax.swing.JButton();
        V26 = new javax.swing.JSlider();
        C26 = new javax.swing.JButton();
        C29 = new javax.swing.JButton();
        V29 = new javax.swing.JSlider();
        V32 = new javax.swing.JSlider();
        C32 = new javax.swing.JButton();
        V31 = new javax.swing.JSlider();
        C31 = new javax.swing.JButton();
        V30 = new javax.swing.JSlider();
        C30 = new javax.swing.JButton();

        setBackground(new java.awt.Color(51, 51, 51));

        C1.setBackground(new java.awt.Color(102, 102, 102));
        C1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        C1.setForeground(new java.awt.Color(255, 255, 255));
        C1.setText("CHANNEL 1");
        C1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C1ActionPerformed(evt);
            }
        });

        V1.setMaximum(8);
        V1.setMinimum(2);
        V1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                V1StateChanged(evt);
            }
        });

        C2.setBackground(new java.awt.Color(102, 102, 102));
        C2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        C2.setForeground(new java.awt.Color(255, 255, 255));
        C2.setText("CHANNEL 2");
        C2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C2ActionPerformed(evt);
            }
        });

        V2.setMaximum(8);
        V2.setMinimum(1);
        V2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                V2StateChanged(evt);
            }
        });

        C3.setBackground(new java.awt.Color(102, 102, 102));
        C3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        C3.setForeground(new java.awt.Color(255, 255, 255));
        C3.setText("CHANNEL 3");
        C3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C3ActionPerformed(evt);
            }
        });

        V3.setMaximum(8);
        V3.setMinimum(1);
        V3.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                V3StateChanged(evt);
            }
        });

        C4.setBackground(new java.awt.Color(102, 102, 102));
        C4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        C4.setForeground(new java.awt.Color(255, 255, 255));
        C4.setText("CHANNEL 4");
        C4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C4ActionPerformed(evt);
            }
        });

        V4.setMaximum(8);
        V4.setMinimum(1);
        V4.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                V4StateChanged(evt);
            }
        });

        C9.setBackground(new java.awt.Color(102, 102, 102));
        C9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        C9.setForeground(new java.awt.Color(255, 255, 255));
        C9.setText("CHANNEL 9");
        C9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C9ActionPerformed(evt);
            }
        });

        V9.setMaximum(8);
        V9.setMinimum(1);
        V9.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                V9StateChanged(evt);
            }
        });

        V12.setMaximum(8);
        V12.setMinimum(1);
        V12.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                V12StateChanged(evt);
            }
        });

        C12.setBackground(new java.awt.Color(102, 102, 102));
        C12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        C12.setForeground(new java.awt.Color(255, 255, 255));
        C12.setText("CHANNEL 12");
        C12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C12ActionPerformed(evt);
            }
        });

        V11.setMaximum(8);
        V11.setMinimum(1);
        V11.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                V11StateChanged(evt);
            }
        });

        C11.setBackground(new java.awt.Color(102, 102, 102));
        C11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        C11.setForeground(new java.awt.Color(255, 255, 255));
        C11.setText("CHANNEL 11");
        C11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C11ActionPerformed(evt);
            }
        });

        V10.setMaximum(8);
        V10.setMinimum(1);
        V10.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                V10StateChanged(evt);
            }
        });

        C10.setBackground(new java.awt.Color(102, 102, 102));
        C10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        C10.setForeground(new java.awt.Color(255, 255, 255));
        C10.setText("CHANNEL 10");
        C10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C10ActionPerformed(evt);
            }
        });

        C13.setBackground(new java.awt.Color(102, 102, 102));
        C13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        C13.setForeground(new java.awt.Color(255, 255, 255));
        C13.setText("CHANNEL 13");
        C13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C13ActionPerformed(evt);
            }
        });

        V13.setMaximum(8);
        V13.setMinimum(1);
        V13.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                V13StateChanged(evt);
            }
        });

        V16.setMaximum(8);
        V16.setMinimum(1);
        V16.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                V16StateChanged(evt);
            }
        });

        C16.setBackground(new java.awt.Color(102, 102, 102));
        C16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        C16.setForeground(new java.awt.Color(255, 255, 255));
        C16.setText("CHANNEL 16");
        C16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C16ActionPerformed(evt);
            }
        });

        V15.setMaximum(8);
        V15.setMinimum(1);
        V15.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                V15StateChanged(evt);
            }
        });

        C15.setBackground(new java.awt.Color(102, 102, 102));
        C15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        C15.setForeground(new java.awt.Color(255, 255, 255));
        C15.setText("CHANNEL 15");
        C15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C15ActionPerformed(evt);
            }
        });

        V14.setMaximum(8);
        V14.setMinimum(1);
        V14.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                V14StateChanged(evt);
            }
        });

        C14.setBackground(new java.awt.Color(102, 102, 102));
        C14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        C14.setForeground(new java.awt.Color(255, 255, 255));
        C14.setText("CHANNEL 14");
        C14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C14ActionPerformed(evt);
            }
        });

        C5.setBackground(new java.awt.Color(102, 102, 102));
        C5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        C5.setForeground(new java.awt.Color(255, 255, 255));
        C5.setText("CHANNEL5");
        C5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C5ActionPerformed(evt);
            }
        });

        V5.setMaximum(8);
        V5.setMinimum(1);
        V5.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                V5StateChanged(evt);
            }
        });

        V8.setMaximum(8);
        V8.setMinimum(1);
        V8.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                V8StateChanged(evt);
            }
        });

        C8.setBackground(new java.awt.Color(102, 102, 102));
        C8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        C8.setForeground(new java.awt.Color(255, 255, 255));
        C8.setText("CHANNEL 8");
        C8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C8ActionPerformed(evt);
            }
        });

        V7.setMaximum(8);
        V7.setMinimum(1);
        V7.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                V7StateChanged(evt);
            }
        });

        C7.setBackground(new java.awt.Color(102, 102, 102));
        C7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        C7.setForeground(new java.awt.Color(255, 255, 255));
        C7.setText("CHANNEL 7");
        C7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C7ActionPerformed(evt);
            }
        });

        V6.setMaximum(8);
        V6.setMinimum(1);
        V6.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                V6StateChanged(evt);
            }
        });

        C6.setBackground(new java.awt.Color(102, 102, 102));
        C6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        C6.setForeground(new java.awt.Color(255, 255, 255));
        C6.setText("CHANNEL 6");
        C6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C6ActionPerformed(evt);
            }
        });

        C17.setBackground(new java.awt.Color(102, 102, 102));
        C17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        C17.setForeground(new java.awt.Color(255, 255, 255));
        C17.setText("CHANNEL 17");
        C17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C17ActionPerformed(evt);
            }
        });

        V17.setMaximum(8);
        V17.setMinimum(1);
        V17.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                V17StateChanged(evt);
            }
        });

        V20.setMaximum(8);
        V20.setMinimum(1);
        V20.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                V20StateChanged(evt);
            }
        });

        C20.setBackground(new java.awt.Color(102, 102, 102));
        C20.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        C20.setForeground(new java.awt.Color(255, 255, 255));
        C20.setText("CHANNEL 20");
        C20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C20ActionPerformed(evt);
            }
        });

        V19.setMaximum(8);
        V19.setMinimum(1);
        V19.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                V19StateChanged(evt);
            }
        });

        C19.setBackground(new java.awt.Color(102, 102, 102));
        C19.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        C19.setForeground(new java.awt.Color(255, 255, 255));
        C19.setText("CHANNEL 19");
        C19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C19ActionPerformed(evt);
            }
        });

        V18.setMaximum(8);
        V18.setMinimum(1);
        V18.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                V18StateChanged(evt);
            }
        });

        C18.setBackground(new java.awt.Color(102, 102, 102));
        C18.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        C18.setForeground(new java.awt.Color(255, 255, 255));
        C18.setText("CHANNEL 18");
        C18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C18ActionPerformed(evt);
            }
        });

        C21.setBackground(new java.awt.Color(102, 102, 102));
        C21.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        C21.setForeground(new java.awt.Color(255, 255, 255));
        C21.setText("CHANNEL 21");
        C21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C21ActionPerformed(evt);
            }
        });

        V21.setMaximum(8);
        V21.setMinimum(1);
        V21.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                V21StateChanged(evt);
            }
        });

        V24.setMaximum(8);
        V24.setMinimum(1);
        V24.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                V24StateChanged(evt);
            }
        });

        C24.setBackground(new java.awt.Color(102, 102, 102));
        C24.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        C24.setForeground(new java.awt.Color(255, 255, 255));
        C24.setText("CHANNEL 24");
        C24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C24ActionPerformed(evt);
            }
        });

        V23.setMaximum(8);
        V23.setMinimum(1);
        V23.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                V23StateChanged(evt);
            }
        });

        C23.setBackground(new java.awt.Color(102, 102, 102));
        C23.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        C23.setForeground(new java.awt.Color(255, 255, 255));
        C23.setText("CHANNEL 23");
        C23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C23ActionPerformed(evt);
            }
        });

        V22.setMaximum(8);
        V22.setMinimum(1);
        V22.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                V22StateChanged(evt);
            }
        });

        C22.setBackground(new java.awt.Color(102, 102, 102));
        C22.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        C22.setForeground(new java.awt.Color(255, 255, 255));
        C22.setText("CHANNEL 22");
        C22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C22ActionPerformed(evt);
            }
        });

        C25.setBackground(new java.awt.Color(102, 102, 102));
        C25.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        C25.setForeground(new java.awt.Color(255, 255, 255));
        C25.setText("CHANNEL 25");
        C25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C25ActionPerformed(evt);
            }
        });

        V25.setMaximum(8);
        V25.setMinimum(1);
        V25.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                V25StateChanged(evt);
            }
        });

        V28.setMaximum(8);
        V28.setMinimum(1);
        V28.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                V28StateChanged(evt);
            }
        });

        C28.setBackground(new java.awt.Color(102, 102, 102));
        C28.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        C28.setForeground(new java.awt.Color(255, 255, 255));
        C28.setText("CHANNEL 28");
        C28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C28ActionPerformed(evt);
            }
        });

        V27.setMaximum(8);
        V27.setMinimum(1);
        V27.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                V27StateChanged(evt);
            }
        });

        C27.setBackground(new java.awt.Color(102, 102, 102));
        C27.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        C27.setForeground(new java.awt.Color(255, 255, 255));
        C27.setText("CHANNEL 27");
        C27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C27ActionPerformed(evt);
            }
        });

        V26.setMaximum(8);
        V26.setMinimum(1);
        V26.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                V26StateChanged(evt);
            }
        });

        C26.setBackground(new java.awt.Color(102, 102, 102));
        C26.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        C26.setForeground(new java.awt.Color(255, 255, 255));
        C26.setText("CHANNEL 26");
        C26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C26ActionPerformed(evt);
            }
        });

        C29.setBackground(new java.awt.Color(102, 102, 102));
        C29.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        C29.setForeground(new java.awt.Color(255, 255, 255));
        C29.setText("CHANNEL 29");
        C29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C29ActionPerformed(evt);
            }
        });

        V29.setMaximum(8);
        V29.setMinimum(1);
        V29.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                V29StateChanged(evt);
            }
        });

        V32.setMaximum(8);
        V32.setMinimum(1);
        V32.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                V32StateChanged(evt);
            }
        });

        C32.setBackground(new java.awt.Color(102, 102, 102));
        C32.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        C32.setForeground(new java.awt.Color(255, 255, 255));
        C32.setText("CHANNEL 32");
        C32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C32ActionPerformed(evt);
            }
        });

        V31.setMaximum(8);
        V31.setMinimum(1);
        V31.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                V31StateChanged(evt);
            }
        });

        C31.setBackground(new java.awt.Color(102, 102, 102));
        C31.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        C31.setForeground(new java.awt.Color(255, 255, 255));
        C31.setText("CHANNEL 31");
        C31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C31ActionPerformed(evt);
            }
        });

        V30.setMaximum(8);
        V30.setMinimum(1);
        V30.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                V30StateChanged(evt);
            }
        });

        C30.setBackground(new java.awt.Color(102, 102, 102));
        C30.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        C30.setForeground(new java.awt.Color(255, 255, 255));
        C30.setText("CHANNEL 30");
        C30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C30ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(V4, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C4, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(V3, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C3, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(V2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(V1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(V8, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C8, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(V7, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C7, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(V6, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C6, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(V5, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C5, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(C12, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(V11, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(C11, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(V10, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(C10, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(V9, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(C9, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(V16, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(C16, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(V15, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(C15, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(V14, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(C14, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(V13, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(C13, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(V12, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(V20, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C20, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(V19, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C19, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(V18, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C18, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(V17, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C17, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(V24, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C24, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(V23, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C23, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(V22, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C22, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(V21, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C21, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(V28, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C28, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(V27, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C27, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(V26, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C26, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(V25, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C25, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(V32, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C32, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(V31, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C31, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(V30, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C30, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(V29, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C29, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(78, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(C9, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(V9, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(C10, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(V10, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(C11, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(V11, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(C12, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(V12, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(C13, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(V13, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(C14, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(V14, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(C15, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(V15, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(C16, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(V16, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(C1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(V1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(C2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(V2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(C3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(V3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(C4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(V4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(C5, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(V5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(C6, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(V6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(C7, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(V7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(C8, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(V8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(C17, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(V17, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(C18, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(V18, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(C19, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(V19, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(C20, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(V20, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(C21, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(V21, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(C22, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(V22, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(C23, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(V23, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(C24, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(V24, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(C25, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(V25, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(C26, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(V26, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(C27, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(V27, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(C28, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(V28, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(C29, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(V29, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(C30, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(V30, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(C31, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(V31, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(C32, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(V32, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(32, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void C1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C1ActionPerformed

        // TODO add your handling code here:     
    alternar0++;   
    if(alternar0==1){
         Conf=X.Read("configuracion.xml");        
         
         try{
             audio0=new ThreadAudio(Conf.GetLista().get(0),Conf.GetMultiCast(),P,Conf.GetFrecuencia(),Conf.GetMuestra(),0,V1,C1);
             audio0.start();
              C1.setBackground(Color.GREEN);
         }
         catch(Exception e){
             System.out.println("Error de hilo ");
               C1.setBackground(Color.RED);
         }
                   
      
    }   

    if(alternar0==2){
         audio0.detener();
         audio0.stop();
         alternar0=0;
         C1.setBackground(Color.gray.darker());
    }
        
      /*         
        alternar0++;   
    if(alternar0==1){
         Conf=X.Read("configuracion.xml");        
         audio0=new ThreadAudio(Conf.GetLista().get(0),Conf.GetMultiCast(),P,Conf.GetFrecuencia(),Conf.GetMuestra(),1);
         audio0.start();   
         C1.setBackground(Color.GREEN);
    }   

    if(alternar0==2){
         audio0.detener();
         audio0.stop();
         alternar0=0;
         C1.setBackground(Color.white);
        }*/
         
       /* 
        alternar0++;
        
        if(alternar0==1){
         canales.set(0,"ON");
         ganancias.set(0,V1.getValue());
         C1.setBackground(Color.BLUE.darker());
        }
        else if(alternar0==2){
            alternar0=0;
              canales.set(0,"OFF");
         ganancias.set(0,V1.getValue());
           C1.setBackground(Color.GRAY.darker());
        
        }
        */
        
    }//GEN-LAST:event_C1ActionPerformed

    private void C2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C2ActionPerformed
        // TODO add your handling code here:
        //leer configuracion
          // AlternarAudio(alternar1, audio1, 2, Conf, C2,V2);
           
       alternar1++;   
    if(alternar1==1){
         Conf=X.Read("configuracion.xml");        
         
         try{
             audio1=new ThreadAudio(Conf.GetLista().get(0),Conf.GetMultiCast(),P,Conf.GetFrecuencia(),Conf.GetMuestra(),1,V2,C2);
             audio1.start();
              C2.setBackground(Color.GREEN);
         }
         catch(Exception e){
             System.out.println("Error de hilo ");
               C2.setBackground(Color.RED);
         }
                   
      
    }   

    if(alternar1==2){
         audio1.detener();
         audio1.stop();
         alternar1=0;
         C2.setBackground(Color.gray.darker());
    }    
           
        /*
       alternar1++;
        
        if(alternar1==1){
         canales.set(1,"ON");
         ganancias.set(1,V2.getValue());
         C2.setBackground(Color.BLUE.darker());
        }
        else if(alternar1==2){
            alternar1=0;
              canales.set(1,"OFF");
         ganancias.set(1,V2.getValue());
           C2.setBackground(Color.GRAY.darker());
        
        }*/
    
    
    }//GEN-LAST:event_C2ActionPerformed

    private void C3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C3ActionPerformed
        // TODO add your handling code here:
           //AlternarAudio(alternar2, audio2, 3, Conf, C3,V3);
           
    alternar2++;   
    if(alternar2==1){
         Conf=X.Read("configuracion.xml");        
         
         try{
             audio2=new ThreadAudio(Conf.GetLista().get(0),Conf.GetMultiCast(),P,Conf.GetFrecuencia(),Conf.GetMuestra(),2,V3,C3);
             audio2.start();
              C3.setBackground(Color.GREEN);
         }
         catch(Exception e){
             System.out.println("Error de hilo ");
               C3.setBackground(Color.RED);
         }
                   
      
    }   

    if(alternar2==2){
         audio2.detener();
         audio2.stop();
         alternar2=0;
         C3.setBackground(Color.gray.darker());
    }
           
           
        /*
        alternar2++;
        
        if(alternar2==1){
         canales.set(2,"ON");
         ganancias.set(2,V3.getValue());
         C3.setBackground(Color.BLUE.darker());
        }
        else if(alternar2==2){
            alternar2=0;
              canales.set(2,"OFF");
         ganancias.set(2,V3.getValue());
           C3.setBackground(Color.GRAY.darker());
        
        }*/
      
    }//GEN-LAST:event_C3ActionPerformed

    private void C4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C4ActionPerformed
        // TODO add your handling code here:
      //     AlternarAudio(alternar3, audio3, 4, Conf, C4,V4);
      
    alternar3++;   
    if(alternar3==1){
         Conf=X.Read("configuracion.xml");                
         try{
             audio3=new ThreadAudio(Conf.GetLista().get(0),Conf.GetMultiCast(),P,Conf.GetFrecuencia(),Conf.GetMuestra(),3,V4,C4);
             audio3.start();
              C4.setBackground(Color.GREEN);
         }
         catch(Exception e){
             System.out.println("Error de hilo ");
               C4.setBackground(Color.RED);
         }     
    }   
    if(alternar3==2){
         audio3.detener();
         audio3.stop();
         alternar3=0;
         C4.setBackground(Color.gray.darker());
    }
      
      
      
        /*
        alternar3++;
        
        if(alternar3==1){
         canales.set(3,"ON");
         ganancias.set(3,V4.getValue());
         C4.setBackground(Color.BLUE.darker());
        }
        else if(alternar3==2){
            alternar3=0;
              canales.set(3,"OFF");
         ganancias.set(3,V4.getValue());
           C4.setBackground(Color.GRAY.darker());
        
        }*/
        
    }//GEN-LAST:event_C4ActionPerformed

    private void C5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C5ActionPerformed
        // TODO add your handling code here:

       // AlternarAudio(alternar4, audio4, 5, Conf, C5,V5);
        alternar4++;   
    if(alternar4==1){
         Conf=X.Read("configuracion.xml");                
         try{
             audio4=new ThreadAudio(Conf.GetLista().get(0),Conf.GetMultiCast(),P,Conf.GetFrecuencia(),Conf.GetMuestra(),4,V5,C5);
             audio4.start();
              C5.setBackground(Color.GREEN);
         }
         catch(Exception e){
             System.out.println("Error de hilo ");
               C5.setBackground(Color.RED);
         }     
    }   
    if(alternar4==2){
         audio4.detener();
         audio4.stop();
         alternar4=0;
         C5.setBackground(Color.gray.darker());
    }
       
        /*
        alternar4++;
        
        if(alternar4==1){
         canales.set(4,"ON");
         ganancias.set(4,V5.getValue());
         C5.setBackground(Color.BLUE.darker());
        }
        else if(alternar4==2){
            alternar4=0;
              canales.set(4,"OFF");
         ganancias.set(4,V5.getValue());
           C5.setBackground(Color.GRAY.darker());
        
        }
*/
 
    }//GEN-LAST:event_C5ActionPerformed

    private void C6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C6ActionPerformed
        // TODO add your handling code here:
       
       //   AlternarAudio(alternar5, audio5,6,Conf,C6,V6);
           alternar5++;   
    if(alternar5==1){
         Conf=X.Read("configuracion.xml");                
         try{
             audio5=new ThreadAudio(Conf.GetLista().get(0),Conf.GetMultiCast(),P,Conf.GetFrecuencia(),Conf.GetMuestra(),5,V6,C6);
             audio5.start();
              C6.setBackground(Color.GREEN);
         }
         catch(Exception e){
             System.out.println("Error de hilo ");
               C6.setBackground(Color.RED);
         }     
    }   
    if(alternar5==2){
         audio5.detener();
         audio5.stop();
         alternar5=0;
         C6.setBackground(Color.gray.darker());
    }
       
        /*
         alternar5++;
        
        if(alternar5==1){
         canales.set(5,"ON");
         ganancias.set(5,V6.getValue());
         C6.setBackground(Color.BLUE.darker());
        }
        else if(alternar5==2){
            alternar5=0;
              canales.set(5,"OFF");
         ganancias.set(5,V6.getValue());
           C6.setBackground(Color.GRAY.darker());
        
        }*/
    }//GEN-LAST:event_C6ActionPerformed

    private void C7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C7ActionPerformed
        // TODO add your handling code here:
        // AlternarAudio(alternar6, audio6,7,Conf,C7,V7);
        
       alternar6++;   
    if(alternar6==1){
         Conf=X.Read("configuracion.xml");                
         try{
             audio6=new ThreadAudio(Conf.GetLista().get(0),Conf.GetMultiCast(),P,Conf.GetFrecuencia(),Conf.GetMuestra(),6,V7,C7);
             audio6.start();
              C7.setBackground(Color.GREEN);
         }
         catch(Exception e){
             System.out.println("Error de hilo ");
               C7.setBackground(Color.RED);
         }     
    }   
    if(alternar6==2){
         audio6.detener();
         audio6.stop();
         alternar6=0;
         C7.setBackground(Color.gray.darker());
    }
        
        /*alternar6++;
        
        if(alternar6==1){
         canales.set(6,"ON");
         ganancias.set(6,V7.getValue());
         C7.setBackground(Color.BLUE.darker());
        }
        else if(alternar6==2){
            alternar6=0;
              canales.set(6,"OFF");
         ganancias.set(6,V7.getValue());
           C7.setBackground(Color.GRAY.darker());
        
        }*/
    }//GEN-LAST:event_C7ActionPerformed

    private void C8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C8ActionPerformed
        // TODO add your handling code here:
         //AlternarAudio(alternar7, audio7,8,Conf,C8,V8);
         
       alternar7++;   
    if(alternar7==1){
         Conf=X.Read("configuracion.xml");                
         try{
             audio7=new ThreadAudio(Conf.GetLista().get(0),Conf.GetMultiCast(),P,Conf.GetFrecuencia(),Conf.GetMuestra(),7,V8,C8);
             audio7.start();
              C8.setBackground(Color.GREEN);
         }
         catch(Exception e){
             System.out.println("Error de hilo ");
               C8.setBackground(Color.RED);
         }     
    }   
    if(alternar7==2){
         audio7.detener();
         audio7.stop();
         alternar7=0;
         C8.setBackground(Color.gray.darker());
    }
         
        /*
        alternar7++;
        
        if(alternar7==1){
         canales.set(7,"ON");
         ganancias.set(7,V8.getValue());
         C8.setBackground(Color.BLUE.darker());
            System.out.println(V8.getValue());
        }
        else if(alternar7==2){
            alternar7=0;
              canales.set(7,"OFF");
         ganancias.set(7,V8.getValue());
           C8.setBackground(Color.GRAY.darker());
        
        }*/
    
    }//GEN-LAST:event_C8ActionPerformed

    private void V8StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_V8StateChanged
        // TODO add your handling code here:
        System.out.println(V8.getValue());
        ganancias.set(7,V8.getValue());
    }//GEN-LAST:event_V8StateChanged

    private void V9StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_V9StateChanged
        // TODO add your handling code here:
        ganancias.set(8,V9.getValue());
    }//GEN-LAST:event_V9StateChanged

    private void V10StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_V10StateChanged
        // TODO add your handling code here:
        ganancias.set(9,V10.getValue());
    }//GEN-LAST:event_V10StateChanged

    private void V11StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_V11StateChanged
        // TODO add your handling code here:
        ganancias.set(10,V11.getValue());
    }//GEN-LAST:event_V11StateChanged

    private void V12StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_V12StateChanged
        // TODO add your handling code here:
        ganancias.set(11,V12.getValue());
    }//GEN-LAST:event_V12StateChanged

    private void V13StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_V13StateChanged
        // TODO add your handling code here:
        ganancias.set(12,V13.getValue());
    }//GEN-LAST:event_V13StateChanged

    private void V14StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_V14StateChanged
        // TODO add your handling code here:
        ganancias.set(13,V14.getValue());
    }//GEN-LAST:event_V14StateChanged

    private void V15StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_V15StateChanged
        // TODO add your handling code here:
        ganancias.set(14,V15.getValue());
    }//GEN-LAST:event_V15StateChanged

    private void V16StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_V16StateChanged
        // TODO add your handling code here:
        ganancias.set(15,V16.getValue());
    }//GEN-LAST:event_V16StateChanged

    private void V17StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_V17StateChanged
        // TODO add your handling code here:
        ganancias.set(16,V17.getValue());
    }//GEN-LAST:event_V17StateChanged

    private void V18StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_V18StateChanged
        // TODO add your handling code here:
        ganancias.set(17,V18.getValue());
    }//GEN-LAST:event_V18StateChanged

    private void V19StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_V19StateChanged
        // TODO add your handling code here:
        ganancias.set(18,V19.getValue());
    }//GEN-LAST:event_V19StateChanged

    private void V20StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_V20StateChanged
        // TODO add your handling code here:
        ganancias.set(19,V20.getValue());
    }//GEN-LAST:event_V20StateChanged

    private void V21StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_V21StateChanged
        // TODO add your handling code here:
        ganancias.set(20,V21.getValue());
    }//GEN-LAST:event_V21StateChanged

    private void V22StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_V22StateChanged
        // TODO add your handling code here:
        ganancias.set(21,V22.getValue());
    }//GEN-LAST:event_V22StateChanged

    private void V23StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_V23StateChanged
        // TODO add your handling code here
        ganancias.set(22,V23.getValue());
    }//GEN-LAST:event_V23StateChanged

    private void V24StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_V24StateChanged
        // TODO add your handling code here:
        ganancias.set(23,V24.getValue());
    }//GEN-LAST:event_V24StateChanged

    private void V32StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_V32StateChanged
        // TODO add your handling code here:
        ganancias.set(31,V32.getValue());
    }//GEN-LAST:event_V32StateChanged

    private void V31StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_V31StateChanged
        // TODO add your handling code here:
        ganancias.set(30,V31.getValue());
    }//GEN-LAST:event_V31StateChanged

    private void V30StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_V30StateChanged
        // TODO add your handling code here:
        ganancias.set(29,V30.getValue());
    }//GEN-LAST:event_V30StateChanged

    private void V25StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_V25StateChanged
        // TODO add your handling code here:
        ganancias.set(24,V25.getValue());
    }//GEN-LAST:event_V25StateChanged

    private void V26StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_V26StateChanged
        // TODO add your handling code here:
        ganancias.set(25,V26.getValue());
    }//GEN-LAST:event_V26StateChanged

    private void V27StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_V27StateChanged
        // TODO add your handling code here:
        ganancias.set(26,V27.getValue());
    }//GEN-LAST:event_V27StateChanged

    private void V28StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_V28StateChanged
        // TODO add your handling code here:
        ganancias.set(27,V28.getValue());
    }//GEN-LAST:event_V28StateChanged

    private void V29StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_V29StateChanged
        // TODO add your handling code here:
        ganancias.set(28,V29.getValue());
    }//GEN-LAST:event_V29StateChanged

    private void C9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C9ActionPerformed
        // TODO add your handling code here:
      //   AlternarAudio(alternar8, audio8,9,Conf,C9,V9);
       alternar8++;   
    if(alternar8==1){
         Conf=X.Read("configuracion.xml");                
         try{
             audio8=new ThreadAudio(Conf.GetLista().get(0),Conf.GetMultiCast(),P,Conf.GetFrecuencia(),Conf.GetMuestra(),8,V9,C9);
             audio8.start();
              C9.setBackground(Color.GREEN);
         }
         catch(Exception e){
             System.out.println("Error de hilo ");
               C9.setBackground(Color.RED);
         }     
    }   
    if(alternar8==2){
         audio8.detener();
         audio8.stop();
         alternar8=0;
         C9.setBackground(Color.gray.darker());
    }
      
        /*
                  alternar8++;
               if(alternar8==1){
              canales.set(8,"ON");
            ganancias.set(8,V9.getValue());
                         C9.setBackground(Color.BLUE.darker());
            System.out.println(V9.getValue());
        }
          else if(alternar8==2){
                  alternar8=0;
              canales.set(8,"OFF");
            ganancias.set(8,V9.getValue());
                         C9.setBackground(Color.GRAY.darker());
        
        }*/
    }//GEN-LAST:event_C9ActionPerformed

    private void C10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C10ActionPerformed
        // TODO add your handling code here:
          //   AlternarAudio(alternar9, audio9,10,Conf,C10,V10);
       alternar9++;   
    if(alternar9==1){
         Conf=X.Read("configuracion.xml");                
         try{
             audio9=new ThreadAudio(Conf.GetLista().get(0),Conf.GetMultiCast(),P,Conf.GetFrecuencia(),Conf.GetMuestra(),9,V10,C10);
             audio9.start();
              C10.setBackground(Color.GREEN);
         }
         catch(Exception e){
             System.out.println("Error de hilo ");
               C10.setBackground(Color.RED);
         }     
    }   
    if(alternar9==2){
         audio9.detener();
         audio9.stop();
         alternar9=0;
         C10.setBackground(Color.gray.darker());
    }
          
        /*
                  alternar9++;
               if(alternar9==1){
              canales.set(9,"ON");
            ganancias.set(9,V10.getValue());
                         C10.setBackground(Color.BLUE.darker());
            System.out.println(V10.getValue());
        }
          else if(alternar9==2){
                  alternar9=0;
              canales.set(9,"OFF");
            ganancias.set(9,V10.getValue());
                         C10.setBackground(Color.GRAY.darker());
        
        }*/
    }//GEN-LAST:event_C10ActionPerformed

    private void C11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C11ActionPerformed
        // TODO add your handling code here:
        //AlternarAudio(alternar10, audio10,11,Conf,C11,V11);
            alternar10++;   
    if(alternar10==1){
         Conf=X.Read("configuracion.xml");                
         try{
             audio10=new ThreadAudio(Conf.GetLista().get(0),Conf.GetMultiCast(),P,Conf.GetFrecuencia(),Conf.GetMuestra(),10,V11,C11);
             audio10.start();
              C11.setBackground(Color.GREEN);
         }
         catch(Exception e){
             System.out.println("Error de hilo ");
               C11.setBackground(Color.RED);
         }     
    }   
    if(alternar10==2){
         audio10.detener();
         audio10.stop();
         alternar10=0;
         C11.setBackground(Color.gray.darker());
    }
        
        /*
                  alternar10++;
               if(alternar10==1){
              canales.set(10,"ON");
            ganancias.set(10,V11.getValue());
                         C11.setBackground(Color.BLUE.darker());
            System.out.println(V11.getValue());
        }
          else if(alternar10==2){
                  alternar10=0;
              canales.set(10,"OFF");
            ganancias.set(10,V11.getValue());
                         C11.setBackground(Color.GRAY.darker());
        
        }*/
    }//GEN-LAST:event_C11ActionPerformed

    private void C12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C12ActionPerformed
        // TODO add your handling code here:
         //  AlternarAudio(alternar11, audio11,12,Conf,C12,V12);
         
                alternar11++;   
    if(alternar11==1){
         Conf=X.Read("configuracion.xml");                
         try{
             audio11=new ThreadAudio(Conf.GetLista().get(0),Conf.GetMultiCast(),P,Conf.GetFrecuencia(),Conf.GetMuestra(),11,V12,C12);
             audio11.start();
              C12.setBackground(Color.GREEN);
         }
         catch(Exception e){
             System.out.println("Error de hilo ");
               C12.setBackground(Color.RED);
         }     
    }   
    if(alternar11==2){
         audio11.detener();
         audio11.stop();
         alternar11=0;
         C12.setBackground(Color.gray.darker());
    }
         
           /*
                  alternar11++;
               if(alternar11==1){
              canales.set(11,"ON");
            ganancias.set(11,V12.getValue());
                         C12.setBackground(Color.BLUE.darker());
            System.out.println(V12.getValue());
        }
          else if(alternar11==2){
                  alternar11=0;
              canales.set(11,"OFF");
            ganancias.set(11,V12.getValue());
                         C12.setBackground(Color.GRAY.darker());
        
        }*/
    }//GEN-LAST:event_C12ActionPerformed

    private void C13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C13ActionPerformed
        // TODO add your handling code here:
          // AlternarAudio(alternar12, audio12,13,Conf,C13,V13);
          
       alternar12++;   
    if(alternar12==1){
         Conf=X.Read("configuracion.xml");                
         try{
             audio12=new ThreadAudio(Conf.GetLista().get(0),Conf.GetMultiCast(),P,Conf.GetFrecuencia(),Conf.GetMuestra(),12,V13,C13);
             audio12.start();
              C13.setBackground(Color.GREEN);
         }
         catch(Exception e){
             System.out.println("Error de hilo ");
               C13.setBackground(Color.RED);
         }     
    }   
    if(alternar12==2){
         audio12.detener();
         audio12.stop();
         alternar12=0;
         C13.setBackground(Color.gray.darker());
    }
          
        /*
                  alternar12++;
               if(alternar12==1){
              canales.set(12,"ON");
            ganancias.set(12,V13.getValue());
                         C13.setBackground(Color.BLUE.darker());
            System.out.println(V13.getValue());
        }
          else if(alternar12==2){
                  alternar12=0;
              canales.set(12,"OFF");
            ganancias.set(12,V13.getValue());
                         C13.setBackground(Color.GRAY.darker());
        
        }*/
    }//GEN-LAST:event_C13ActionPerformed

    private void C14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C14ActionPerformed
        // TODO add your handling code here:
        // AlternarAudio(alternar13, audio13,14,Conf,C14,V14);    
        
          alternar13++;   
    if(alternar13==1){
         Conf=X.Read("configuracion.xml");                
         try{
             audio13=new ThreadAudio(Conf.GetLista().get(0),Conf.GetMultiCast(),P,Conf.GetFrecuencia(),Conf.GetMuestra(),13,V14,C14);
             audio13.start();
              C14.setBackground(Color.GREEN);
         }
         catch(Exception e){
             System.out.println("Error de hilo ");
               C14.setBackground(Color.RED);
         }     
    }   
    if(alternar13==2){
         audio13.detener();
         audio13.stop();
         alternar13=0;
         C14.setBackground(Color.gray.darker());
    }
        
        
        /*
              alternar13++;
               if(alternar13==1){
              canales.set(13,"ON");
            ganancias.set(13,V14.getValue());
                         C14.setBackground(Color.BLUE.darker());
            System.out.println(V14.getValue());
        }
          else if(alternar13==2){
                  alternar13=0;
              canales.set(13,"OFF");
            ganancias.set(13,V14.getValue());
                         C14.setBackground(Color.GRAY.darker());
        
        }*/
                 
    }//GEN-LAST:event_C14ActionPerformed

    private void C15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C15ActionPerformed
        // TODO add your handling code here:
         // AlternarAudio(alternar14,audio14,15,Conf,C15,V15);    
         
       alternar14++;   
    if(alternar14==1){
         Conf=X.Read("configuracion.xml");                
         try{
             audio14=new ThreadAudio(Conf.GetLista().get(0),Conf.GetMultiCast(),P,Conf.GetFrecuencia(),Conf.GetMuestra(),14,V15,C15);
             audio14.start();
              C15.setBackground(Color.GREEN);
         }
         catch(Exception e){
             System.out.println("Error de hilo ");
               C15.setBackground(Color.RED);
         }     
    }   
    if(alternar14==2){
         audio14.detener();
         audio14.stop();
         alternar14=0;
         C15.setBackground(Color.gray.darker());
    }
         
        /*
                  alternar14++;
               if(alternar14==1){
              canales.set(14,"ON");
            ganancias.set(14,V15.getValue());
                         C15.setBackground(Color.BLUE.darker());
            System.out.println(V15.getValue());
        }
          else if(alternar14==2){
                  alternar14=0;
              canales.set(14,"OFF");
            ganancias.set(14,V15.getValue());
                         C15.setBackground(Color.GRAY.darker());
        
        }*/
    }//GEN-LAST:event_C15ActionPerformed

    private void C16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C16ActionPerformed
        // TODO add your handling code here:
       // AlternarAudio(alternar15,audio15,16,Conf,C16,V17);   
       
         alternar15++;   
    if(alternar15==1){
         Conf=X.Read("configuracion.xml");                
         try{
             audio15=new ThreadAudio(Conf.GetLista().get(0),Conf.GetMultiCast(),P,Conf.GetFrecuencia(),Conf.GetMuestra(),15,V16,C16);
             audio15.start();
              C16.setBackground(Color.GREEN);
         }
         catch(Exception e){
             System.out.println("Error de hilo ");
               C16.setBackground(Color.RED);
         }     
    }   
    if(alternar15==2){
         audio15.detener();
         audio15.stop();
         alternar15=0;
         C16.setBackground(Color.gray.darker());
    }
       
                 /*
                  alternar15++;
               if(alternar15==1){
              canales.set(15,"ON");
            ganancias.set(15,V16.getValue());
                         C16.setBackground(Color.BLUE.darker());
            System.out.println(V16.getValue());
        }
          else if(alternar15==2){
                  alternar15=0;
              canales.set(15,"OFF");
            ganancias.set(15,V16.getValue());
                         C16.setBackground(Color.GRAY.darker());
        
        }*/
    }//GEN-LAST:event_C16ActionPerformed

    private void C17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C17ActionPerformed
        // TODO add your handling code here:
        
      //  AlternarAudio(alternar16,audio16,17,Conf,C17,V17); 
      
        alternar16++;   
    if(alternar16==1){
         Conf=X.Read("configuracion.xml");                
         try{
             audio16=new ThreadAudio(Conf.GetLista().get(0),Conf.GetMultiCast(),P,Conf.GetFrecuencia(),Conf.GetMuestra(),16,V17,C17);
             audio16.start();
              C17.setBackground(Color.GREEN);
         }
         catch(Exception e){
             System.out.println("Error de hilo ");
               C17.setBackground(Color.RED);
         }     
    }   
    if(alternar16==2){
         audio16.detener();
         audio16.stop();
         alternar16=0;
         C17.setBackground(Color.gray.darker());
    }
        
        /*
                  alternar16++;
               if(alternar16==1){
              canales.set(16,"ON");
            ganancias.set(16,V17.getValue());
                         C17.setBackground(Color.BLUE.darker());
            System.out.println(V17.getValue());
        }
          else if(alternar16==2){
                  alternar16=0;
              canales.set(16,"OFF");
            ganancias.set(16,V17.getValue());
                         C17.setBackground(Color.GRAY.darker());
        
        }*/
    }//GEN-LAST:event_C17ActionPerformed

    private void C18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C18ActionPerformed
        // TODO add your handling code here:
      //  AlternarAudio(alternar17,audio17,18,Conf,C18,V18); 
         alternar17++;   
    if(alternar17==1){
         Conf=X.Read("configuracion.xml");                
         try{
             audio17=new ThreadAudio(Conf.GetLista().get(0),Conf.GetMultiCast(),P,Conf.GetFrecuencia(),Conf.GetMuestra(),17,V18,C18);
             audio17.start();
              C18.setBackground(Color.GREEN);
         }
         catch(Exception e){
             System.out.println("Error de hilo ");
               C18.setBackground(Color.RED);
         }     
    }   
    if(alternar17==2){
         audio17.detener();
         audio17.stop();
         alternar17=0;
         C18.setBackground(Color.gray.darker());
    }
      
      
        /*
                  alternar17++;
               if(alternar17==1){
              canales.set(17,"ON");
            ganancias.set(17,V18.getValue());
                         C18.setBackground(Color.BLUE.darker());
            System.out.println(V18.getValue());
        }
          else if(alternar17==2){
                  alternar17=0;
              canales.set(17,"OFF");
            ganancias.set(17,V18.getValue());
                         C18.setBackground(Color.GRAY.darker());
        
        }*/
    }//GEN-LAST:event_C18ActionPerformed

    private void C19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C19ActionPerformed
        // TODO add your handling code here:
      //  AlternarAudio(alternar18,audio18,19,Conf,C19,V19); 
      
       alternar18++;   
    if(alternar18==1){
         Conf=X.Read("configuracion.xml");                
         try{
             audio18=new ThreadAudio(Conf.GetLista().get(0),Conf.GetMultiCast(),P,Conf.GetFrecuencia(),Conf.GetMuestra(),18,V19,C19);
             audio18.start();
              C19.setBackground(Color.GREEN);
         }
         catch(Exception e){
             System.out.println("Error de hilo ");
               C19.setBackground(Color.RED);
         }     
    }   
    if(alternar18==2){
         audio18.detener();
         audio18.stop();
         alternar18=0;
         C19.setBackground(Color.gray.darker());
    }
        /*
        
                  alternar18++;
               if(alternar18==1){
              canales.set(18,"ON");
            ganancias.set(18,V19.getValue());
                         C19.setBackground(Color.BLUE.darker());
            System.out.println(V19.getValue());
        }
          else if(alternar18==2){
                  alternar18=0;
              canales.set(18,"OFF");
            ganancias.set(18,V19.getValue());
                         C19.setBackground(Color.GRAY.darker());
        
        }*/
    }//GEN-LAST:event_C19ActionPerformed

    private void C20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C20ActionPerformed
        // TODO add your handling code here:
          // AlternarAudio(alternar19,audio19,20,Conf,C20,V20); 
          
       alternar19++;   
    if(alternar19==1){
         Conf=X.Read("configuracion.xml");                
         try{
             audio19=new ThreadAudio(Conf.GetLista().get(0),Conf.GetMultiCast(),P,Conf.GetFrecuencia(),Conf.GetMuestra(),19,V20,C20);
             audio19.start();
              C20.setBackground(Color.GREEN);
         }
         catch(Exception e){
             System.out.println("Error de hilo ");
               C20.setBackground(Color.RED);
         }     
    }   
    if(alternar19==2){
         audio19.detener();
         audio19.stop();
         alternar19=0;
         C20.setBackground(Color.gray.darker());
    }
          
               /*          
                  alternar19++;
               if(alternar19==1){
              canales.set(19,"ON");
            ganancias.set(19,V20.getValue());
                         C20.setBackground(Color.BLUE.darker());
            System.out.println(V20.getValue());
        }
          else if(alternar19==2){
                  alternar19=0;
              canales.set(19,"OFF");
            ganancias.set(19,V20.getValue());
                         C20.setBackground(Color.GRAY.darker());
        
        }*/
    }//GEN-LAST:event_C20ActionPerformed

    private void C21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C21ActionPerformed
        // TODO add your handling code here:
      //  AlternarAudio(alternar20,audio20,21,Conf,C21,V21); 
      
        alternar20++;   
    if(alternar20==1){
         Conf=X.Read("configuracion.xml");                
         try{
             audio20=new ThreadAudio(Conf.GetLista().get(0),Conf.GetMultiCast(),P,Conf.GetFrecuencia(),Conf.GetMuestra(),20,V21,C21);
             audio20.start();
              C21.setBackground(Color.GREEN);
         }
         catch(Exception e){
             System.out.println("Error de hilo ");
               C21.setBackground(Color.RED);
         }     
    }   
    if(alternar20==2){
         audio20.detener();
         audio20.stop();
         alternar20=0;
         C21.setBackground(Color.gray.darker());
    }
      
        /*
                  alternar20++;
               if(alternar20==1){
              canales.set(20,"ON");
            ganancias.set(20,V21.getValue());
                         C21.setBackground(Color.BLUE.darker());
            System.out.println(V21.getValue());
        }
          else if(alternar20==2){
                  alternar20=0;
              canales.set(20,"OFF");
            ganancias.set(20,V21.getValue());
                         C21.setBackground(Color.GRAY.darker());
        
        }*/
    }//GEN-LAST:event_C21ActionPerformed

    private void C22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C22ActionPerformed
        // TODO add your handling code here:
       // AlternarAudio(alternar21,audio21,22,Conf,C22,V22);
        
       
        alternar21++;   
    if(alternar21==1){
         Conf=X.Read("configuracion.xml");                
         try{
             audio21=new ThreadAudio(Conf.GetLista().get(0),Conf.GetMultiCast(),P,Conf.GetFrecuencia(),Conf.GetMuestra(),21,V22,C22);
             audio21.start();
              C22.setBackground(Color.GREEN);
         }
         catch(Exception e){
             System.out.println("Error de hilo ");
               C22.setBackground(Color.RED);
         }     
    }   
    if(alternar21==2){
         audio21.detener();
         audio21.stop();
         alternar21=0;
         C22.setBackground(Color.gray.darker());
    }
       
        /*
                  alternar21++;
               if(alternar21==1){
              canales.set(21,"ON");
            ganancias.set(21,V22.getValue());
                         C22.setBackground(Color.BLUE.darker());
            System.out.println(V22.getValue());
        }
          else if(alternar21==2){
                  alternar21=0;
              canales.set(21,"OFF");
            ganancias.set(21,V22.getValue());
                         C22.setBackground(Color.GRAY.darker());
        
        }*/
    }//GEN-LAST:event_C22ActionPerformed

    private void C23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C23ActionPerformed
        // TODO add your handling code here:
       //  AlternarAudio(alternar22,audio22,23,Conf,C23,V23);
       
       alternar22++;   
    if(alternar22==1){
         Conf=X.Read("configuracion.xml");                
         try{
             audio22=new ThreadAudio(Conf.GetLista().get(0),Conf.GetMultiCast(),P,Conf.GetFrecuencia(),Conf.GetMuestra(),22,V23,C23);
             audio22.start();
              C23.setBackground(Color.GREEN);
         }
         catch(Exception e){
             System.out.println("Error de hilo ");
               C23.setBackground(Color.RED);
         }     
    }   
    if(alternar22==2){
         audio22.detener();
         audio22.stop();
         alternar22=0;
         C23.setBackground(Color.gray.darker());
    }
       
        /*
                  alternar22++;
               if(alternar22==1){
              canales.set(22,"ON");
            ganancias.set(22,V23.getValue());
                         C23.setBackground(Color.BLUE.darker());
            System.out.println(V23.getValue());
        }
          else if(alternar22==2){
                  alternar22=0;
              canales.set(22,"OFF");
            ganancias.set(22,V23.getValue());
                         C23.setBackground(Color.GRAY.darker());
        
        }*/
    }//GEN-LAST:event_C23ActionPerformed

    private void C24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C24ActionPerformed
        // TODO add your handling code here:
     //   AlternarAudio(alternar23,audio23,24,Conf,C24,V24);
     
      alternar23++;   
    if(alternar23==1){
         Conf=X.Read("configuracion.xml");                
         try{
             audio23=new ThreadAudio(Conf.GetLista().get(0),Conf.GetMultiCast(),P,Conf.GetFrecuencia(),Conf.GetMuestra(),23,V24,C24);
             audio23.start();
              C24.setBackground(Color.GREEN);
         }
         catch(Exception e){
             System.out.println("Error de hilo ");
               C24.setBackground(Color.RED);
         }     
    }   
    if(alternar23==2){
         audio23.detener();
         audio23.stop();
         alternar23=0;
         C24.setBackground(Color.gray.darker());
    }
     
        /*
                  alternar23++;
               if(alternar23==1){
              canales.set(23,"ON");
            ganancias.set(23,V24.getValue());
                         C24.setBackground(Color.BLUE.darker());
            System.out.println(V24.getValue());
        }
          else if(alternar23==2){
                  alternar23=0;
              canales.set(23,"OFF");
            ganancias.set(23,V24.getValue());
                         C24.setBackground(Color.GRAY.darker());
        
        }*/
    }//GEN-LAST:event_C24ActionPerformed

    private void C25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C25ActionPerformed
        // TODO add your handling code here:
        
      //  AlternarAudio(alternar24,audio24,25,Conf,C25,V25);
      
       alternar24++;   
    if(alternar24==1){
         Conf=X.Read("configuracion.xml");                
         try{
             audio24=new ThreadAudio(Conf.GetLista().get(0),Conf.GetMultiCast(),P,Conf.GetFrecuencia(),Conf.GetMuestra(),24,V25,C25);
             audio24.start();
              C25.setBackground(Color.GREEN);
         }
         catch(Exception e){
             System.out.println("Error de hilo ");
               C25.setBackground(Color.RED);
         }     
    }   
    if(alternar24==2){
         audio24.detener();
         audio24.stop();
         alternar24=0;
         C25.setBackground(Color.gray.darker());
    }
      
        /*
                  alternar24++;
               if(alternar24==1){
              canales.set(24,"ON");
            ganancias.set(24,V25.getValue());
                         C25.setBackground(Color.BLUE.darker());
            System.out.println(V25.getValue());
        }
          else if(alternar24==2){
                  alternar24=0;
              canales.set(24,"OFF");
            ganancias.set(24,V25.getValue());
                         C25.setBackground(Color.GRAY.darker());
        
        }*/
    }//GEN-LAST:event_C25ActionPerformed

    private void C26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C26ActionPerformed
        // TODO add your handling code here:
      //  AlternarAudio(alternar25,audio25,26,Conf,C26,V26);
      
       alternar25++;   
    if(alternar25==1){
         Conf=X.Read("configuracion.xml");                
         try{
             audio25=new ThreadAudio(Conf.GetLista().get(0),Conf.GetMultiCast(),P,Conf.GetFrecuencia(),Conf.GetMuestra(),25,V26,C26);
             audio25.start();
              C26.setBackground(Color.GREEN);
         }
         catch(Exception e){
             System.out.println("Error de hilo ");
               C26.setBackground(Color.RED);
         }     
    }   
    if(alternar25==2){
         audio25.detener();
         audio25.stop();
         alternar25=0;
         C26.setBackground(Color.gray.darker());
    }
      
        /*
                  alternar25++;
               if(alternar25==1){
              canales.set(25,"ON");
            ganancias.set(25,V26.getValue());
                         C26.setBackground(Color.BLUE.darker());
            System.out.println(V26.getValue());
        }
          else if(alternar25==2){
                  alternar25=0;
              canales.set(25,"OFF");
            ganancias.set(25,V26.getValue());
                         C26.setBackground(Color.GRAY.darker());
        
        }*/
    }//GEN-LAST:event_C26ActionPerformed

    private void C27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C27ActionPerformed
        // TODO add your handling code here:
      //  AlternarAudio(alternar26,audio26,27,Conf,C27,V27);
      
           alternar26++;   
    if(alternar26==1){
         Conf=X.Read("configuracion.xml");                
         try{
             audio26=new ThreadAudio(Conf.GetLista().get(0),Conf.GetMultiCast(),P,Conf.GetFrecuencia(),Conf.GetMuestra(),26,V27,C27);
             audio26.start();
              C27.setBackground(Color.GREEN);
         }
         catch(Exception e){
             System.out.println("Error de hilo ");
               C27.setBackground(Color.RED);
         }     
    }   
    if(alternar26==2){
         audio26.detener();
         audio26.stop();
         alternar26=0;
         C27.setBackground(Color.gray.darker());
    }
      
        /*
                  alternar26++;
               if(alternar26==1){
              canales.set(26,"ON");
            ganancias.set(26,V27.getValue());
                         C27.setBackground(Color.BLUE.darker());
            System.out.println(V27.getValue());
        }
          else if(alternar26==2){
                  alternar26=0;
              canales.set(26,"OFF");
            ganancias.set(26,V27.getValue());
                         C27.setBackground(Color.GRAY.darker());
        
        }*/
    }//GEN-LAST:event_C27ActionPerformed

    private void C28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C28ActionPerformed
        // TODO add your handling code here:
       //  AlternarAudio(alternar27,audio27,28,Conf,C28,V28);
       
             alternar27++;   
    if(alternar27==1){
         Conf=X.Read("configuracion.xml");                
         try{
             audio27=new ThreadAudio(Conf.GetLista().get(0),Conf.GetMultiCast(),P,Conf.GetFrecuencia(),Conf.GetMuestra(),27,V28,C28);
             audio27.start();
              C28.setBackground(Color.GREEN);
         }
         catch(Exception e){
             System.out.println("Error de hilo ");
               C28.setBackground(Color.RED);
         }     
    }   
    if(alternar27==2){
         audio27.detener();
         audio27.stop();
         alternar27=0;
         C28.setBackground(Color.gray.darker());
    }
       
        /*
                  alternar27++;
               if(alternar27==1){
              canales.set(27,"ON");
            ganancias.set(27,V28.getValue());
                         C28.setBackground(Color.BLUE.darker());
            System.out.println(V28.getValue());
        }
          else if(alternar27==2){
                  alternar27=0;
              canales.set(27,"OFF");
            ganancias.set(27,V28.getValue());
                         C28.setBackground(Color.GRAY.darker());
        
        }*/
    }//GEN-LAST:event_C28ActionPerformed

    private void C29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C29ActionPerformed
        // TODO add your handling code here:
        //  AlternarAudio(alternar28,audio28,29,Conf,C29,V29);
        
       alternar28++;   
    if(alternar28==1){
         Conf=X.Read("configuracion.xml");                
         try{
             audio28=new ThreadAudio(Conf.GetLista().get(0),Conf.GetMultiCast(),P,Conf.GetFrecuencia(),Conf.GetMuestra(),28,V29,C29);
             audio28.start();
              C29.setBackground(Color.GREEN);
         }
         catch(Exception e){
             System.out.println("Error de hilo ");
               C29.setBackground(Color.RED);
         }     
    }   
    if(alternar28==2){
         audio28.detener();
         audio28.stop();
         alternar28=0;
         C29.setBackground(Color.gray.darker());
    }
        
        /*
                  alternar28++;
               if(alternar28==1){
              canales.set(28,"ON");
            ganancias.set(28,V29.getValue());
                         C29.setBackground(Color.BLUE.darker());
            System.out.println(V29.getValue());
        }
          else if(alternar28==2){
                  alternar28=0;
              canales.set(28,"OFF");
            ganancias.set(28,V29.getValue());
                         C29.setBackground(Color.GRAY.darker());
        
        }*/
    }//GEN-LAST:event_C29ActionPerformed

    private void C30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C30ActionPerformed
        // TODO add your handling code here:
     //   AlternarAudio(alternar29,audio29,30,Conf,C30,V30);
     
       alternar29++;   
    if(alternar29==1){
         Conf=X.Read("configuracion.xml");                
         try{
             audio29=new ThreadAudio(Conf.GetLista().get(0),Conf.GetMultiCast(),P,Conf.GetFrecuencia(),Conf.GetMuestra(),29,V30,C30);
             audio29.start();
              C30.setBackground(Color.GREEN);
         }
         catch(Exception e){
             System.out.println("Error de hilo ");
               C30.setBackground(Color.RED);
         }     
    }   
    if(alternar29==2){
         audio29.detener();
         audio29.stop();
         alternar29=0;
         C30.setBackground(Color.gray.darker());
    }
     
        /*
                  alternar29++;
               if(alternar29==1){
              canales.set(29,"ON");
            ganancias.set(29,V30.getValue());
                         C30.setBackground(Color.BLUE.darker());
            System.out.println(V30.getValue());
        }
          else if(alternar29==2){
                  alternar29=0;
              canales.set(29,"OFF");
            ganancias.set(29,V30.getValue());
                         C30.setBackground(Color.GRAY.darker());
        
        }*/
    }//GEN-LAST:event_C30ActionPerformed

    private void C31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C31ActionPerformed
        // TODO add your handling code here:
       // AlternarAudio(alternar30,audio30,31,Conf,C31,V31);
       
       alternar30++;   
    if(alternar30==1){
         Conf=X.Read("configuracion.xml");                
         try{
             audio30=new ThreadAudio(Conf.GetLista().get(0),Conf.GetMultiCast(),P,Conf.GetFrecuencia(),Conf.GetMuestra(),30,V31,C31);
             audio30.start();
              C31.setBackground(Color.GREEN);
         }
         catch(Exception e){
             System.out.println("Error de hilo ");
               C31.setBackground(Color.RED);
         }     
    }   
    if(alternar30==2){
         audio30.detener();
         audio30.stop();
         alternar30=0;
         C31.setBackground(Color.gray.darker());
    }
       
        /*
                  alternar30++;
               if(alternar30==1){
              canales.set(30,"ON");
            ganancias.set(30,V31.getValue());
                         C31.setBackground(Color.BLUE.darker());
            System.out.println(V31.getValue());
        }
          else if(alternar30==2){
                  alternar30=0;
              canales.set(30,"OFF");
            ganancias.set(30,V31.getValue());
                         C31.setBackground(Color.GRAY.darker());
        
        }*/
    }//GEN-LAST:event_C31ActionPerformed

    private void C32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C32ActionPerformed
        // TODO add your handling code here:
        
      //  AlternarAudio(alternar31,audio31,32,Conf,C32,V32);
      
           alternar31++;   
    if(alternar31==1){
         Conf=X.Read("configuracion.xml");                
         try{
             audio31=new ThreadAudio(Conf.GetLista().get(0),Conf.GetMultiCast(),P,Conf.GetFrecuencia(),Conf.GetMuestra(),31,V32,C32);
             audio31.start();
              C32.setBackground(Color.GREEN);
         }
         catch(Exception e){
             System.out.println("Error de hilo ");
               C32.setBackground(Color.RED);
         }     
    }   
    if(alternar31==2){
         audio31.detener();
         audio31.stop();
         alternar31=0;
         C32.setBackground(Color.gray.darker());
    }
      
        /*
                  alternar31++;
               if(alternar31==1){
              canales.set(31,"ON");
            ganancias.set(31,V32.getValue());
                         C32.setBackground(Color.BLUE.darker());
            System.out.println(V32.getValue());
        }
          else if(alternar31==2){
                  alternar31=0;
              canales.set(31,"OFF");
            ganancias.set(31,V32.getValue());
                         C32.setBackground(Color.GRAY.darker());
        
        }*/
    }//GEN-LAST:event_C32ActionPerformed

    private void V1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_V1StateChanged
        // TODO add your handling code here:
         ganancias.set(0,V1.getValue());
    }//GEN-LAST:event_V1StateChanged

    private void V2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_V2StateChanged
        // TODO add your handling code here:
        ganancias.set(1,V2.getValue());
    }//GEN-LAST:event_V2StateChanged

    private void V3StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_V3StateChanged
        // TODO add your handling code here:
        ganancias.set(2,V3.getValue());
    }//GEN-LAST:event_V3StateChanged

    private void V4StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_V4StateChanged
        // TODO add your handling code here:
        ganancias.set(3,V4.getValue());
    }//GEN-LAST:event_V4StateChanged

    private void V5StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_V5StateChanged
        // TODO add your handling code here:
        ganancias.set(4,V5.getValue());
    }//GEN-LAST:event_V5StateChanged

    private void V6StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_V6StateChanged
        // TODO add your handling code here:
        ganancias.set(5,V6.getValue());
    }//GEN-LAST:event_V6StateChanged

    private void V7StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_V7StateChanged
        // TODO add your handling code here:
        ganancias.set(6,V7.getValue());
    }//GEN-LAST:event_V7StateChanged

    
    private  void AlternarAudio(int alternar,ThreadAudio audio,int numerocanal,Configuracion C,JButton J,JSlider V){
          
          alternar++;   
    if(alternar==1){
         C=X.Read("configuracion.xml");        
         
         audio=new ThreadAudio(Conf.GetLista().get(0),Conf.GetMultiCast(),P,Conf.GetFrecuencia(),Conf.GetMuestra(),numerocanal,V,C1);
         audio.start();   
         J.setBackground(Color.GREEN);
    }   

    if(alternar==2){
         audio.detener();
         audio.stop();
         alternar=0;
         J.setBackground(Color.white);
        }
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton C1;
    private javax.swing.JButton C10;
    private javax.swing.JButton C11;
    private javax.swing.JButton C12;
    private javax.swing.JButton C13;
    private javax.swing.JButton C14;
    private javax.swing.JButton C15;
    private javax.swing.JButton C16;
    private javax.swing.JButton C17;
    private javax.swing.JButton C18;
    private javax.swing.JButton C19;
    private javax.swing.JButton C2;
    private javax.swing.JButton C20;
    private javax.swing.JButton C21;
    private javax.swing.JButton C22;
    private javax.swing.JButton C23;
    private javax.swing.JButton C24;
    private javax.swing.JButton C25;
    private javax.swing.JButton C26;
    private javax.swing.JButton C27;
    private javax.swing.JButton C28;
    private javax.swing.JButton C29;
    private javax.swing.JButton C3;
    private javax.swing.JButton C30;
    private javax.swing.JButton C31;
    private javax.swing.JButton C32;
    private javax.swing.JButton C4;
    private javax.swing.JButton C5;
    private javax.swing.JButton C6;
    private javax.swing.JButton C7;
    private javax.swing.JButton C8;
    private javax.swing.JButton C9;
    private javax.swing.JSlider V1;
    private javax.swing.JSlider V10;
    private javax.swing.JSlider V11;
    private javax.swing.JSlider V12;
    private javax.swing.JSlider V13;
    private javax.swing.JSlider V14;
    private javax.swing.JSlider V15;
    private javax.swing.JSlider V16;
    private javax.swing.JSlider V17;
    private javax.swing.JSlider V18;
    private javax.swing.JSlider V19;
    private javax.swing.JSlider V2;
    private javax.swing.JSlider V20;
    private javax.swing.JSlider V21;
    private javax.swing.JSlider V22;
    private javax.swing.JSlider V23;
    private javax.swing.JSlider V24;
    private javax.swing.JSlider V25;
    private javax.swing.JSlider V26;
    private javax.swing.JSlider V27;
    private javax.swing.JSlider V28;
    private javax.swing.JSlider V29;
    private javax.swing.JSlider V3;
    private javax.swing.JSlider V30;
    private javax.swing.JSlider V31;
    private javax.swing.JSlider V32;
    private javax.swing.JSlider V4;
    private javax.swing.JSlider V5;
    private javax.swing.JSlider V6;
    private javax.swing.JSlider V7;
    private javax.swing.JSlider V8;
    private javax.swing.JSlider V9;
    // End of variables declaration//GEN-END:variables

    private void elseif() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
